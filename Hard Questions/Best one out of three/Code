import math
def tukeys_ninthers(items):

    newlist=[]  #declare a newlist

    #special condition if the list has len 1
    if len(items)==1:
        return items[0]
    
    #special condition if the list has len 0
    elif len(items)==0:
        return items

    #special condition if the list has len 3, we can just get the median from this value, do not need to run while loop
    elif(len(items))==3:
        items.sort()
        return (items[1])

    #if it does not fall under any of the special conditions
    else:

        x = True    #initialize variable for the while loop

        while len(items)!=3:    #set condition for while loop
                                #this conditions works as the while loop will never run when the length is 3, as soon as it becomes 3 within it, it stops
            
            #put the elements of items into a list of lists as lists of 3's
            for i in range(0, len(items),3):
                newlist.append(items[i:i+3])
            
            #sort every individual list within the list
            for i in range(len(newlist)):
                newlist[i].sort() 

            items.clear()   #clear the original list we had as items so we can update it

            #run a for loop where it collects the middle value of every list within the newlist
            for i in range(len(newlist)):
                items.append(newlist[i][1])

            #if the lenght of the items is 3 the we cannot simplify it further and must sort and return middle element
            if len(items) == 3:
                items.sort()
                return (items[1])

            #if the lenght of items is not 3 it means we can run the while loop again
            else:
                newlist.clear() #clear newlist to put updated values at every iteration
                
